#define HAVE_STRUCT_TIMESPEC
#include <iostream>
#include <thread>
#include <pthread.h>
#include <vector>
#include <chrono>


void* printText(void* arg) {
    std::string threadName = *reinterpret_cast<std::string*>(arg);
    int counter = 0;
    while (true) {
        std::cout << threadName << ": Line " << ++counter << std::endl;
        std::this_thread::sleep_for(std::chrono::milliseconds(500));  // sleep for 0.5 sec
        pthread_testcancel(); // checking pthread_testcancel()
    }
    return nullptr;
}

int main() {
    std::string threadName = "Child thread";
    pthread_t thread;

    pthread_create(&thread, nullptr, printText, &threadName);

    std::this_thread::sleep_for(std::chrono::milliseconds(2000));  //sleep for 2 sec

    pthread_cancel(thread);

    pthread_join(thread, nullptr);

    std::cout << "Child thread has been cancelled by the parent thread." << std::endl;

    return 0;
}
